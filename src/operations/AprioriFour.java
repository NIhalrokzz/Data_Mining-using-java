/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package operations;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jxl.Workbook;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

/**
 *
 * @author Nihal
 */
public class AprioriFour extends javax.swing.JFrame {

    File file;
    ArrayList<String> names = new ArrayList<String>();
    ArrayList<Double> values = new ArrayList<Double>();
    String disp[] = null;
    /**
     * Creates new form AprioriFour
     */
    public AprioriFour() {
        initComponents();
        setVisible(true);
        loadnames();
    }

     void loadnames()
    {
    Connection connection = null;
        ResultSet resultSet = null;
        Statement stmt = null;
        PreparedStatement statement = null;
        try{
             Class.forName("com.mysql.jdbc.Driver");
           connection = DriverManager.getConnection(Constants.DBURL,Constants.USERNAME,Constants.PASSWORD);
           DatabaseMetaData dbmd = connection.getMetaData();

    String[] types = { "TABLE" };
    resultSet = dbmd.getTables(null, null, "%", types);
    while (resultSet.next()) {
      String tableName = resultSet.getString(3);
      jComboBox1.addItem(tableName);
      jComboBox2.addItem(tableName);
      jComboBox3.addItem(tableName);
      jComboBox4.addItem(tableName);
      
    }

}
catch(Exception e){
JOptionPane.showMessageDialog(null, e.getMessage());
}
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 0, 0));

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Table Selection");

        jButton1.setText("Perform Apriori Analysis");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter Support");

        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton2.setText("Export");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Back to Main Page");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String tablename1="",tablename2="",tablename3="",tablename4="";
        String colnames1[]=null;
        String colnames2[]=null;
        double colvalues1[]=null;
        double colvalues2[]=null;
        String colnames3[]=null;
        double colvalues3[]=null;
        String colnames4[]=null;
        double colvalues4[]=null;
        String colnames5[]=null;
        double colvalues5[]=null;
        double total=0;
        DefaultTableModel model=null;
        Connection connection = null;
        Statement stmt = null;
        ResultSet resultSet = null;
        PreparedStatement statement = null;
        String sql="";
        int colcount=0;
        double support=0;
        try
        {
            tablename1 = jComboBox1.getSelectedItem().toString();
            tablename2 = jComboBox2.getSelectedItem().toString();
            tablename3 = jComboBox3.getSelectedItem().toString();
            tablename4 = jComboBox4.getSelectedItem().toString();
            support = Double.parseDouble(jTextField1.getText());
            Class.forName("com.mysql.jdbc.Driver");
            connection = DriverManager.getConnection(Constants.DBURL,Constants.USERNAME,Constants.PASSWORD);
            sql="select * from "+tablename1;
            statement=connection.prepareStatement(sql);
            resultSet=statement.executeQuery();
            ResultSetMetaData rsmd = resultSet.getMetaData();
            colcount=rsmd.getColumnCount();
            colnames1 = new String[colcount-1];
            colvalues1 = new double[colcount-1];
            resultSet=null;
            for(int i=2;i<=colcount;i++)
            {
                colnames1[i-2] = rsmd.getColumnName(i);
                System.out.println(colnames1[i-2]);
                sql="select SUM("+colnames1[i-2]+") from "+tablename1;
                statement=connection.prepareStatement(sql);
                resultSet=statement.executeQuery();
                if(resultSet.next())
                {
                    colvalues1[i-2] = resultSet.getDouble(1);
                    System.out.println(colvalues1[i-2]);
                    total=total+colvalues1[i-2];
                }
            }
            for(int i=2;i<=colcount;i++)
            {
                colvalues1[i-2] = colvalues1[i-2]/total * 100;
            }

            total=0;

            //////////////////////////////////////////////////////////////////////////////////////////////////////
            sql="select * from "+tablename2;
            statement=connection.prepareStatement(sql);
            resultSet=statement.executeQuery();
            rsmd = resultSet.getMetaData();
            colcount=rsmd.getColumnCount();
            colnames2 = new String[colcount-1];
            colvalues2 = new double[colcount-1];
            resultSet=null;
            for(int i=2;i<=colcount;i++)
            {
                colnames2[i-2] = rsmd.getColumnName(i);
                System.out.println(colnames2[i-2]);
                sql="select SUM("+colnames2[i-2]+") from "+tablename2;
                statement=connection.prepareStatement(sql);
                resultSet=statement.executeQuery();
                if(resultSet.next())
                {
                    colvalues2[i-2] = resultSet.getDouble(1);
                    System.out.println(colvalues2[i-2]);
                    total=total+colvalues2[i-2];
                }
            }
            for(int i=2;i<=colcount;i++)
            {
                colvalues2[i-2] = colvalues2[i-2]/total * 100;
            }

            total=0;
          
            /////////////////////////////////////////////////////////////////
            sql="select * from "+tablename3;
            statement=connection.prepareStatement(sql);
            resultSet=statement.executeQuery();
            rsmd = resultSet.getMetaData();
            colcount=rsmd.getColumnCount();
            colnames3 = new String[colcount-1];
            colvalues3 = new double[colcount-1];
            resultSet=null;
            for(int i=2;i<=colcount;i++)
            {
                colnames3[i-2] = rsmd.getColumnName(i);
                System.out.println(colnames3[i-2]);
                sql="select SUM("+colnames3[i-2]+") from "+tablename3;
                statement=connection.prepareStatement(sql);
                resultSet=statement.executeQuery();
                if(resultSet.next())
                {
                    colvalues3[i-2] = resultSet.getDouble(1);
                    System.out.println(colvalues3[i-2]);
                    total=total+colvalues3[i-2];
                }
            }
            for(int i=2;i<=colcount;i++)
            {
                colvalues3[i-2] = colvalues3[i-2]/total * 100;
            }
            total=0;

            //////////////////////////////////////////////////////////////////////////////////////////////////////
            sql="select * from "+tablename4;
            statement=connection.prepareStatement(sql);
            resultSet=statement.executeQuery();
            rsmd = resultSet.getMetaData();
            colcount=rsmd.getColumnCount();
            colnames4 = new String[colcount-1];
            colvalues4 = new double[colcount-1];
            resultSet=null;
            for(int i=2;i<=colcount;i++)
            {
                colnames4[i-2] = rsmd.getColumnName(i);
                System.out.println(colnames4[i-2]);
                sql="select SUM("+colnames4[i-2]+") from "+tablename4;
                statement=connection.prepareStatement(sql);
                resultSet=statement.executeQuery();
                if(resultSet.next())
                {
                    colvalues4[i-2] = resultSet.getDouble(1);
                    System.out.println(colvalues4[i-2]);
                    total=total+colvalues4[i-2];
                }
            }
            for(int i=2;i<=colcount;i++)
            {
                colvalues4[i-2] = colvalues4[i-2]/total * 100;
            }

        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
        }

        /////////////////////////////////////////////////////////////////
        
        
        
        for(int i=0;i<colvalues1.length;i++)
        {
            System.out.println(colnames1[i] +"\t"+ colvalues1[i]);
        }
        for(int i=0;i<colvalues2.length;i++)
        {
            System.out.println(colnames2[i] +"\t"+ colvalues2[i]);
        }
        for(int i=0;i<colvalues3.length;i++)
        {
            System.out.println(colnames3[i] +"\t"+ colvalues3[i]);
        }
        for(int i=0;i<colvalues4.length;i++)
        {
            System.out.println(colnames4[i] +"\t"+ colvalues4[i]);
        }
        int k=0,l=0,m=0;
        try
        {
            colnames5 = new String[colnames1.length * colnames2.length * colnames3.length * colnames4.length];
            disp = new String[colnames1.length * colnames2.length * colnames3.length * colnames4.length];
            colvalues5 = new double[colnames1.length * colnames2.length * colnames3.length * colnames4.length];
            for(int i=0;i<colnames1.length;i++)
            {
                for(int j=0;j<colnames2.length;j++)
                {
                    for(k=0;k<colnames3.length;k++)
                    {
                        for(m =0; m< colnames4.length;m++){
                        colnames5[l] = colnames1[i] + "  -  "+colnames2[j]+ "  -  "+colnames3[k]+ "  -  "+colnames4[m];
                        colvalues5[l] = (colvalues1[i] + colvalues2[j]+ colvalues3[k]+ colvalues4[m])/4.0;
                        l++;
                        }
                    }
                }
            }
            System.out.println("\n");
            for(int i=0;i<colvalues3.length;i++)
            {
                disp[i] = colnames3[i] +"\t"+ colvalues3[i];
                System.out.println(disp[i]);
            }
            model = new DefaultTableModel();
            jTable1.setModel(model);
            model.addColumn("Transaction");
            model.addColumn("Percentile Occurence");
            model.addColumn("Probability");
           int yu = 0;
            for(int i=0;i<colvalues5.length;i++)
            {
                if(colvalues5[i]>=support){
                model.addRow(new Object[]{colnames5[i].substring(0, 15), colvalues5[i],"high"});
                names.add(colnames5[i]);
                values.add(colvalues5[i]);
                yu++;
                }
                else
                {}  
            }

        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         String trt = jTextField2.getText().toString();
                //the file path
               file = new File("C:\\Users\\Nihal\\Desktop\\Saved Tables\\"+trt+".xls");
               //if the file not exist create one
               WritableWorkbook myFirstWbook = null;
               if(!file.exists()){
            try {
                file.createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(AprioriTwo.class.getName()).log(Level.SEVERE, null, ex);
            }
               }
            try{
                 myFirstWbook = Workbook.createWorkbook(file);
                 WritableSheet excelSheet = myFirstWbook.createSheet("Sheet 1", 0);
                 Label label = new Label(0, 0, "Item Sets");
                 excelSheet.addCell(label);
                 for(int i = 0;i<names.size();i++){
                     excelSheet.addCell(new Label(0,i+1,names.get(i)));
                 }
                 label = new Label(1, 0, "Percentile Occurance");
                 for(int i = 0;i<names.size();i++){
                     excelSheet.addCell(new Label(1,i+1,values.get(i).toString()));
                 }
                 excelSheet.addCell(label);
                 label = new Label(2, 0, "Probability");
                 excelSheet.addCell(label);
                 for(int i = 1;i<names.size();i++){
                     excelSheet.addCell(new Label(2,i+1,"high"));
                 }
                  myFirstWbook.write();
               }   catch (IOException ex) {
                       Logger.getLogger(AprioriTwo.class.getName()).log(Level.SEVERE, null, ex);
                   } catch (WriteException ex) {
                       Logger.getLogger(AprioriTwo.class.getName()).log(Level.SEVERE, null, ex);
                   }finally {

            if (myFirstWbook != null) {
                try {
                    myFirstWbook.close();
                } catch (IOException e) {
                    e.printStackTrace();
                } catch (WriteException e) {
                    e.printStackTrace();
                }
            }
            }
               JOptionPane.showMessageDialog(null, "Data Exported");
               
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.hide();
        new GenericLoad().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
